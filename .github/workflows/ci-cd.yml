name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        volumes:
          - ./pgdata:/var/lib/postgresql/data

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.4'

      - name: Install Python dependencies
        run: |
          pip install --upgrade --force-reinstall -r requirements.txt

      
      - name: Change ownership of pgdata
        run: |
              sudo chown -R $USER:$USER /home/runner/work/nyc_payroll/nyc_payroll/pgdata

      - name: Verify installed packages
        run: |
          pip list

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          python -m unittest discover -s tests -p "*.py"

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        volumes:
          - ./pgdata:/var/lib/postgresql/data
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python dependencies
        run: |
          pip install --upgrade --force-reinstall -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Create Database
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -c "CREATE DATABASE nycpayroll;"  # Creates the 'nycpayroll' database

      - name: Run data_quality_rules_functions
        env:
          PGHOST: localhost
          PGDATABASE: nycpayroll
          PGUSER: postgres
          PGPASSWORD: postgres
        run: |
          psql -h $PGHOST -d $PGDATABASE -U $PGUSER -f data_quality_rules.sql

      - name: Load data to database
        env:
          PGHOST: localhost
          PGDATABASE: nycpayroll
          PGUSER: postgres
          PGPASSWORD: postgres
        run: |
          python scripts/main.py

      - name: Run stored procedures
        env:
          PGHOST: localhost
          PGDATABASE: nycpayroll
          PGUSER: postgres
          PGPASSWORD: postgres
        run: |
          psql -h $PGHOST -d $PGDATABASE -U $PGUSER -f proc_data_warehouse.sql
          psql -h $PGHOST -d $PGDATABASE -U $PGUSER -f procedure_datawarehouse.sql
